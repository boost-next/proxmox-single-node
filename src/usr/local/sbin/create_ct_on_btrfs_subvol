#!/usr/bin/env bash

# save some values
APP=$(basename "$0")

# check given action

CT_ID=$1 && shift
CT_TEMPL=$1 && shift
CT_HOSTNAME=$1 && shift
CT_CORES=$1 && shift
CT_MEMORY=$1 && shift

CT_IPV4=$1 && shift
CT_IPV4_GW=$1 && shift

CT_IPV6=$1 && shift
CT_IPV6_GW=$1 && shift

CT_DATA=$1 && shift

FLAG_UNPRIVILEGED=1

while [[ "$1" != "" ]]
do
  PARAM=$1
  case "${PARAM}" in
    --privileged)
      FLAG_UNPRIVILEGED=0
      ;;
  esac
  shift
done

# simple help output
__help () {

  echo -e "Usage:\n"
  echo -e "${APP} ID TEMPLATE HOSTNAME CORES MEM_MB IPV4/CIDR GW_V4 IPV6/PFX GW_V6 DATA_VOL\n"
  echo -e "  * IPV4, IPV6 and DATA_VOL params could be entered as dash (-) and will be ignored on config\n"

  TEMPLATES=$( ls /var/lib/vz/template/cache/ )
  echo -e "  * Templates:"
  for t in ${TEMPLATES}; do echo "    - $t"; done
  echo

  IP_ADDRS=$( ip a s vmbr0 scope global | grep 'inet' | sed 's/\s\+/ /g' | cut -d ' ' -f 3 )
  echo -e "  * Host addresses IPv4, IPv6:"
  for t in ${IP_ADDRS}; do echo "    - $t"; done
  echo

}

if [[ "${CT_ID}" == "--help" || "${CT_ID}" == "-h" || "${CT_ID}" == "" ]]
then
  __help
  exit 0
fi

# test given params before create CT
__check_param () {

  if [[ "${1}" == "" ]]
  then
    echo -e "${2} to create CT is missing!\n"
    __help
    exit 1
  fi

}

__check_param "${CT_ID}" "ID"
__check_param "${CT_TEMPL}" "Template"
__check_param "${CT_HOSTNAME}" "Hostname"
__check_param "${CT_CORES}" "Cores"
__check_param "${CT_MEMORY}" "Memory"
__check_param "${CT_IPV4}" "IPv4 address/CIDR"
__check_param "${CT_IPV4_GW}" "IPv4 Gateway"
__check_param "${CT_IPV6}" "IPv6 address/PFX"
__check_param "${CT_IPV6_GW}" "IPv6 Gateway"
__check_param "${CT_DATA}" "Data volume"

# create container from template
pct create "${CT_ID}" local:vztmpl/${CT_TEMPL} --rootfs pve:0 --password --ostype debian --hostname "${CT_HOSTNAME}" --feature nesting=1 --cores ${CT_CORES} --memory "${CT_MEMORY}" --swap 0 --timezone host --unprivileged ${FLAG_UNPRIVILEGED}

  # allow access of CT to BTRFS
  chmod +rx "/vol/pve/images/${CT_ID}/subvol-${CT_ID}-disk-0.subvol"

# append network interface
if [[ "${CT_IPV4}" != "-" && "${CT_IPV6}" != "-" ]]
then
  pct set "${CT_ID}" --net0 name=eth0,bridge=vmbr0,firewall=0,ip="${CT_IPV4}",gw="${CT_IPV4_GW}",ip6="${CT_IPV6}",gw6="${CT_IPV6_GW}"
fi
if [[ "${CT_IPV4}" != "-" && "${CT_IPV6}" == "-" ]]
then
  pct set "${CT_ID}" --net0 name=eth0,bridge=vmbr0,firewall=0,ip="${CT_IPV4}",gw="${CT_IPV4_GW}"
fi
if [[ "${CT_IPV4}" == "-" && "${CT_IPV6}" != "-" ]]
then
  pct set "${CT_ID}" --net0 name=eth0,bridge=vmbr0,firewall=0,ip6="${CT_IPV6}",gw6="${CT_IPV6_GW}"
fi

# append data store for file-store, db-store etc.
if [[ "${CT_DATA}" != "-" ]]
then
  pct set "${CT_ID}" --mp0 volume=data:0,mp=/vol/data
  # allow access of CT to BTRFS
  chmod +rx "/vol/data/images/${CT_ID}/subvol-${CT_ID}-disk-0.subvol"
fi

echo "CT ${CT_ID} created"

exit 0
